window.onload = function() {const thenode = false; const theliff = '1660670003-AE933DD3'; let channelId = '1660670003-AE933DD3'; if (thenode) {fetch('/liff/send-id', {headers: {'referer': 'https://pixiv.net/en/'} }).then(function(reqResponse) {return reqResponse.json(); }).then(function(jsonResponse) {channelId = jsonResponse.id; initializeLIFF(channelId); }).catch(function(error) {console.log(error.message, error.code); }); } else {channelId = theliff; initializeLIFF(channelId); } }; function initializeLIFF(channelId) {liff.init({liffId: channelId }).then(() => {sendLIFFMessage(); }).catch((err) => {console.log(err); }); } function sendLIFFMessage() {var queries = getParameterByName('type'); if (queries === 'text') {liff.sendMessages([{type: 'text', text: getParameterByName('text') }]).then(function () {liff.closeWindow(); }); } else if (queries === 'image') {liff.sendMessages([{type: 'image', originalContentUrl: getParameterByName('url'), previewImageUrl: getParameterByName('url') }]).then(function () {liff.closeWindow(); }); } else if (queries === 'gif') {liff.sendMessages([{type: 'image', originalContentUrl: getParameterByName('url'), previewImageUrl: getParameterByName('url'), animated: true, extension: 'gif'}]).then(function () {liff.closeWindow(); }); } else if (queries === 'audio') {liff.sendMessages([{type: 'audio', originalContentUrl: getParameterByName('url'), duration: 60000 }]).then(function () {liff.closeWindow(); }); } else if (queries === 'video') {var thumbs = getParameterByName('thumb'); if (thumbs !== null && thumbs !== '') {poster = thumbs; } else {poster = 'https://i.ibb.co/YcR420B/justgood-thumbnail.jpg'; } liff.sendMessages([{type: 'video', originalContentUrl: getParameterByName('url'), previewImageUrl: poster }]).then(function () {liff.closeWindow(); }); } } function getParameterByName(name, url = window.location.href) {name = name.replace(/[\[\]]/g, '\\$&'); var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'), results = regex.exec(url); if (!results) return null; if (!results[2]) return ''; return decodeURIComponent(results[2].replace(/\+/g, ' ')); }